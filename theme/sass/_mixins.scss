@charset 'UTF-8';

// 混入声明
// ==============================================

// 清除浮动
// ---------------------

@mixin clearfix {
    *zoom:1;
    &:before,
    &:after {
        display:table;
        content:"";
        // 修复 Opera/contenteditable 的 bug:
        // http://nicolasgallagher.com/micro-clearfix-hack/#comment-36952
        line-height:0;
    }
    &:after {
        clear:both;
    }
}


// 聚焦
// ---------------------
@mixin tab-focus() {
    // 默认
    outline:thin dotted #333;
    // Webkit
    outline:5px auto -webkit-focus-ring-color;
    outline-offset:-2px;
}


// IE7 inline-block
// ---------------------

@mixin ie7-inline-block {
    *display:inline;
    *zoom:1;
}


// 指定元素尺寸
// $width 元素宽度
// $height 元素高度
// ---------------------

@mixin size($width, $height) {
    width:$width;
    height:$height;
}
@mixin square($size) {
    @include size($size, $size);
}


// 过长文字显示省略号
// $width 容器宽度
// ---------------------

@mixin text-overflow($width:100%) {
    width:$width;
    overflow:hidden;
    word-wrap:normal;
    white-space:nowrap;
    text-overflow:ellipsis;
}


// 隐藏文字
// ---------------------

@mixin hide-text {
    overflow:hidden;
    white-space:nowrap;
    text-indent:-100%;
}


// border箭头
// $color 箭头颜色
// $width 箭头宽度
// $direction 箭头方向
// ---------------------

@mixin border-arrow($color:#666, $width:10px, $direction:"down"){
    width:0; height:0; overflow:hidden; border-width:$width;
    
    @if $direction == "up" {
        border-style:dashed dashed solid;
        border-color:transparent transparent $color;
    }
    @else if $direction == "left" {
        border-style:dashed solid dashed dashed;
        border-color:transparent $color transparent transparent;
    }
    @else if $direction == "right" {
        border-style:dashed dashed dashed solid;
        border-color:transparent transparent transparent $color;
    }
    @else {
        border-style:solid dashed dashed;
        border-color:$color transparent transparent;
    }
}


// 半透明效果
// $opacity 透明度
// ---------------------

@mixin opacity($opacity:50) {
    opacity:$opacity / 100;
    filter:alpha(opacity=$opacity);
}


// 去除列表默认样式
// ------------------------

@mixin removeListStyle {
    margin:0; padding:0; list-style:none; 
}



// CSS3 属性
// --------------------------------------------------

// 圆角边框
@mixin border-radius($radius:5px) {
  -webkit-border-radius:$radius;
     -moz-border-radius:$radius;
          border-radius:$radius;
}

// 投影
@mixin box-shadow($shadow:0 1px 3px rgba(0,0,0,.25)) {
  -webkit-box-shadow:$shadow;
     -moz-box-shadow:$shadow;
          box-shadow:$shadow;
}

// 文字投影
@mixin text-shadow($shadow:1px 1px 0 #fff) {
  -webkit-text-shadow:$shadow;
     -moz-text-shadow:$shadow;
          text-shadow:$shadow;
}

// 变换
@mixin transition($transition:all .2s ease-in) {
    -webkit-transition:$transition;;
       -moz-transition:$transition;
         -o-transition:$transition;
            transition:$transition;;
}


// 背景渐变
// --------------------------------------------------

@mixin gradient-horizontal($startColor:#555, $endColor:#333) {
    background-color:$endColor;
    background-image:-moz-linear-gradient(left, $startColor, $endColor); // FF 3.6+
    background-image:-webkit-gradient(linear, 0 0, 100% 0, from($startColor), to($endColor)); // Safari 4+, Chrome 2+
    background-image:-webkit-linear-gradient(left, $startColor, $endColor); // Safari 5.1+, Chrome 10+
    background-image:-o-linear-gradient(left, $startColor, $endColor); // Opera 11.10
    background-image:linear-gradient(to right, $startColor, $endColor); // Standard, IE10
    background-repeat:repeat-x;
    filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($startColor)}', endColorstr='#{ie-hex-str($endColor)}', GradientType=1); // IE9 and down
}
@mixin gradient-vertical($startColor:#555, $endColor:#333) {
    background-color:mix($startColor, $endColor, 60%);
    background-image:-moz-linear-gradient(top, $startColor, $endColor); // FF 3.6+
    background-image:-webkit-gradient(linear, 0 0, 0 100%, from($startColor), to($endColor)); // Safari 4+, Chrome 2+
    background-image:-webkit-linear-gradient(top, $startColor, $endColor); // Safari 5.1+, Chrome 10+
    background-image:-o-linear-gradient(top, $startColor, $endColor); // Opera 11.10
    background-image:linear-gradient(to bottom, $startColor, $endColor); // Standard, IE10
    background-repeat:repeat-x;
    filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($startColor)}', endColorstr='#{ie-hex-str($endColor)}', GradientType=0); // IE9 and down
}


// 栅格系统
// --------------------------------------------------

@mixin grid-core($griColumnWidth, $gridGutterWidth) {
    // 行
    .row {
        margin-left:$gridGutterWidth * -1; 
        _position:relative; 
    }

    // 列
    %span {
        float:left; 
        min-height:1px;
        margin-left:$gridGutterWidth; 
        _display:inline; 
    }

    // 容器
    .container {
        margin:auto; 
        @include grid-core-span($gridColumns, $gridColumnWidth, $gridGutterWidth);
    }

    @include grid-core-span-x($gridColumns, $gridColumnWidth, $gridGutterWidth);
    @include grid-core-offset-x($gridColumns, $gridColumnWidth, $gridGutterWidth);
}

@mixin grid-core-span-x($gridColumns, $gridColumnWidth, $gridGutterWidth) {
    @while $gridColumns > 2 {
        .span#{$gridColumns} {
            @extend %span;
            @include grid-core-span($gridColumns, $gridColumnWidth, $gridGutterWidth);
        }
        $gridColumns:$gridColumns - 1;
    }
}

@mixin grid-core-offset-x($gridColumns, $gridColumnWidth, $gridGutterWidth) {
    @while $gridColumns > 0 {
        .offset#{$gridColumns} { 
            @include grid-core-offset($gridColumns, $gridColumnWidth, $gridGutterWidth); 
        }
        $gridColumns:$gridColumns - 1;
    }
}

@mixin grid-core-span($columns, $gridColumnWidth, $gridGutterWidth) {
    width:($gridColumnWidth * $columns) + ($gridGutterWidth * ($columns - 1));
}

@mixin grid-core-offset($columns, $gridColumnWidth, $gridGutterWidth) {
    margin-left:($gridColumnWidth * $columns) + ($gridGutterWidth * ($columns + 1));
}


